package manager;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;


import model.Czesc;

public class CzescManager {
	private Connection conn;
	private Statement stmt;
	
	private PreparedStatement DodajCzesc;
	private PreparedStatement UsunCzesc;
	private PreparedStatement UsunWszystkieCzesc;
	private PreparedStatement GetCzesc;
	private PreparedStatement GetCzescid;
	private PreparedStatement listaCzesc;
	private PreparedStatement UpdateCzesc;
	
	public CzescManager(){
		try{
			conn = DriverManager.getConnection("jdbc:hsqldb:hsql://localhost/workdb");
			stmt = conn.createStatement();
			ResultSet rs = conn.getMetaData().getTables(null, null, null, null);
			boolean tableExists = false;
			while (rs.next()) {
				if ("Czesc".equalsIgnoreCase(rs.getString("TABLE_NAME"))) {
					tableExists = true;
					break;
				}
			}
			if (!tableExists) stmt.executeUpdate("Create table Czesc (idCzesc int UNIQUE GENERATED BY DEFAULT AS IDENTITY, numerczesci varchar(15), nazwa varchar(50), cena money, marka varchar(20) )");
			DodajCzesc = conn.prepareStatement("INSERT INTO Czesc(numerczesci, nazwa, cena ,marka) VALUES (?,?,?,?)");
			UsunCzesc = conn.prepareStatement("DELETE FROM Czesc WHERE idCzesc = ?");
			UsunWszystkieCzesc = conn.prepareStatement("DELETE FROM Czesc");
			GetCzesc = conn.prepareStatement("SELECT * FROM Czesc WHERE numerczesci = ?");
			GetCzescid = conn.prepareStatement("SELECT * FROM Czesc WHERE idCzesc = ?");
			listaCzesc = conn.prepareStatement("SELECT * FROM Czesc");
			UpdateCzesc = conn.prepareStatement("Update Czesc SET numerczesci = ?, nazwa = ?, cena = ?, marka = ? WHERE numer czesci = ?");
			
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}
	
	public Connection getConnection() {
		return conn;
	}
	
	public int DodajCzesc(Czesc czesc){
	int licznik = 0;
		try {
			conn.setAutoCommit(false);
			DodajCzesc.setString(1, czesc.getNumerCzesci());
			DodajCzesc.setString(2, czesc.getNazwa());
			DodajCzesc.setDouble(3, czesc.getCena());
			DodajCzesc.setString(4, czesc.getMarka());
			licznik = DodajCzesc.executeUpdate();
			conn.commit();
		} catch (SQLException e) {
			e.printStackTrace();
		}
	return licznik;
	}
	
	public int UsunCzesc(Czesc czesc){
	int licznik = 0;
		try {
			conn.setAutoCommit(false);
			UsunCzesc.setInt(1, czesc.getIdCzesc());
			licznik = UsunCzesc.executeUpdate();
			conn.commit();
		} catch (SQLException e) {
			e.printStackTrace();
		}
	return licznik;
	}
	
	public int UsunWszystkieCzesc(Czesc czesc){
	int licznik = 0;
		try {
			conn.setAutoCommit(false);
			licznik = UsunWszystkieCzesc.executeUpdate();
			conn.commit();
		} catch (SQLException e) {
			e.printStackTrace();
		}
	return licznik;
	}
	
	public int UpdateCzesc(Czesc czescstara, Czesc czescnowa){
		int licznik = 0;
			try {
				conn.setAutoCommit(false);
				UpdateCzesc.setString(1, czescnowa.getNumerCzesci());
				UpdateCzesc.setString(2, czescnowa.getNazwa());
				UpdateCzesc.setDouble(3, czescnowa.getCena());
				UpdateCzesc.setString(4, czescnowa.getMarka());
				UpdateCzesc.setString(5, czescstara.getNumerCzesci());
				licznik = UpdateCzesc.executeUpdate();
				conn.commit();
			} catch (SQLException e) {
				e.printStackTrace();
			}
		return licznik;
		}
	public List<Czesc> getAll(){
		List<Czesc> czesc = new ArrayList<Czesc>();
		try{
			ResultSet rs = listaCzesc.executeQuery();
			while(rs.next()){
				Czesc czesci = new Czesc();
				czesci.setIdCzesc(rs.getInt("idCzesc"));
				czesci.setNumerCzesci(rs.getString("numerczesci"));
				czesci.setNazwa(rs.getString("nazwa"));
				czesci.setCena(rs.getDouble("cena"));
				czesci.setMarka(rs.getString("marka"));
				((List<Czesc>) czesci).add(czesci);
			}
		} catch(SQLException e){
			e.printStackTrace();
		}
		return czesc;
	}
	
	public Czesc getNumerCzesc(String numerczesci) {
		Czesc czesci = new Czesc();
		try{
			GetCzesc.setString(1, numerczesci);
			ResultSet rs = GetCzesc.executeQuery();
			while(rs.next()){
				czesci.setIdCzesc(rs.getInt("idCzesc"));
				czesci.setNumerCzesci(rs.getString("numerczesci"));
				czesci.setNazwa(rs.getString("nazwa"));
				czesci.setCena(rs.getDouble("cena"));
				czesci.setMarka(rs.getString("marka"));
			}
		} catch(SQLException e){
			e.printStackTrace();
		}
		return czesci;
	}
	
	public Czesc getidCzesc(String idczesc) {
		Czesc czesci = new Czesc();
		try{
			GetCzescid.setString(1, idczesc);
			ResultSet rs = GetCzescid.executeQuery();
			while(rs.next()){
				czesci.setIdCzesc(rs.getInt("idCzesc"));
				czesci.setNumerCzesci(rs.getString("numerczesci"));
				czesci.setNazwa(rs.getString("nazwa"));
				czesci.setCena(rs.getDouble("cena"));
				czesci.setMarka(rs.getString("marka"));
			}
		} catch(SQLException e){
			e.printStackTrace();
		}
		return czesci;
	}
}	