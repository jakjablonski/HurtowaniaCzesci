
package manager;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import model.Zamowienie;

public class ZamowienieManager {
	private Connection conn;
	private Statement stmt;
	
	private PreparedStatement DodajZamowienie;
	private PreparedStatement UsunZamowienie;
	private PreparedStatement UsunWszystkieZamowienie;
	private PreparedStatement GetZamowienie;
	private PreparedStatement GetZamowienieid;
	private PreparedStatement listaZamowienie;
	
	public ZamowienieManager(){
		try{
			conn = DriverManager.getConnection("jdbc:hsqldb:hsql://localhost/workdb");
			stmt = conn.createStatement();
			ResultSet rs = conn.getMetaData().getTables(null, null, null, null);
			boolean tableExists = false;
			while (rs.next()) {
				if ("Zamowienie".equalsIgnoreCase(rs.getString("TABLE_NAME"))) {
					tableExists = true;
					break;
				}
			}
			if (!tableExists) stmt.executeUpdate("Create table Zamowienie (idZamowienie int UNIQUE GENERATED BY DEFAULT AS IDENTITY, kontrahent varchar(50), suma money, dataZamowienie date DEFAULT CURRENT_DATE )");
			DodajZamowienie = conn.prepareStatement("INSERT INTO Zamowienie(kontrahent, suma ,dataZamowienie) VALUES (?,?,?)");
			UsunZamowienie = conn.prepareStatement("DELETE FROM Zamowienie WHERE idZamowienie = ?");
			UsunWszystkieZamowienie = conn.prepareStatement("DELETE FROM Zamowienie");
			GetZamowienie = conn.prepareStatement("SELECT * FROM Zamowienie WHERE kontrahent = ?");
			GetZamowienieid = conn.prepareStatement("SELECT * FROM Zamowienie WHERE idZamowienie = ?");
			listaZamowienie = conn.prepareStatement("SELECT * FROM Zamowienie");
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}
	
	public Connection getConnection() {
		return conn;
	}
	
	}
